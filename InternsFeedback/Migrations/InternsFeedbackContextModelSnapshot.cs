// <auto-generated />
using System;
using InternsFeedback.Datatbase.Entities;
using InternsFeedback.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InternsFeedback.Migrations
{
    [DbContext(typeof(InternsFeedbackContext))]
    partial class InternsFeedbackContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InternsFeedback.Models.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Communication")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discipline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InternId")
                        .HasColumnType("int");

                    b.Property<string>("OverallTechnicalCompitency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProblemSolvingAnalyzingSkill")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDelivery")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectProcessCompliance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Teaming")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TechnicalExcellence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("FeedbackId");

                    b.HasIndex("InternId");

                    b.HasIndex("UserId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("InternsFeedback.Models.Intern", b =>
                {
                    b.Property<int>("InternId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("InternName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("InternId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ProjectId");

                    b.ToTable("Interns");
                });

            modelBuilder.Entity("InternsFeedback.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("InternsFeedback.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("InternsFeedback.Models.Feedback", b =>
                {
                    b.HasOne("InternsFeedback.Models.Intern", "Intern")
                        .WithMany("Feedback")
                        .HasForeignKey("InternId")
                        .IsRequired();

                    b.HasOne("InternsFeedback.Models.User", "User")
                        .WithMany("Feedback")
                        .HasForeignKey("UserId")
                        .IsRequired();
                });

            modelBuilder.Entity("InternsFeedback.Models.Intern", b =>
                {
                    b.HasOne("InternsFeedback.Models.User", "CreatedByNavigation")
                        .WithMany("Intern")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_Intern_User_UserId")
                        .IsRequired();

                    b.HasOne("InternsFeedback.Models.Project", "Project")
                        .WithMany("Intern")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Intern_ProjectId")
                        .IsRequired();
                });

            modelBuilder.Entity("InternsFeedback.Models.Project", b =>
                {
                    b.HasOne("InternsFeedback.Models.User", "User")
                        .WithMany("Project")
                        .HasForeignKey("UserId")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
